# CICLO-I
Python

Reto 5: Grupo P82
Número máximo de ficheros: 1
Tipo de trabajo: Individual

Tyler, Tfue y Auron Cada vez que coleccionan skins para sus video juegos siempre crean una 
lista con los números de las skins que les falta y crean otra con los números de 
las que tienen para cambiar. Con esas listas realizan cambios con otros jugadores.

También han notado que las skins que coleccionan dependiendo del álbum, 
son categorizadas de diferente manera a veces la llaman de 
"escudo"," de equipo", "doradas", "plateadas" o normales y 
solo las skins de un tipo pueden ser cambiadas por las skins del mismo tipo.


Como ellos están tomando el curso del MinTic2021, han decidido crear un programa que les ayude realizando dichos cambios. 
Para ello han notado que requieren crear una librería llamada "laminas" que conste como mínimo de las siguientes 
funciones que les permitirán construir el programa completo (vale 1):

 

1. (Vale 1) La función "clases" que dada una lista de las categorías de todas las skins (en la posición i-ésima de la lista está el tipo de dicha skin), genera una lista con los tipos de skins sin repetición.
Por ejemplo, si el álbum tiene diez skins y cada una tiene los siguientes tipos:

['dorada','plateada','normal','normal','normal','dorada','plateada','normal','normal','normal']

la función debe retornar la lista

1.  ['dorada','plateada','normal']

Nótese que las cateogrias aparecen solo una vez.

 

2. (Vale 1) La función "mefaltandelaclase" que dada una lista con los números de skin que les faltan, la lista de las categorías de cada skin y una categoría de skin (en ese orden), les retorne una lista con los números de dicha categoría que les faltan.

Por ejemplo, si se ejecuta la función:

mefaltan([1,3,6,8], ['dorada','plateada','normal','normal','normal','dorada','plateada','normal','normal','normal'], 'normal')

debe retornar la lista

[3,8]

Nótese que los números de skins empiezan en cero (0) y van hasta el nueve (9) en este ejemplo (siempre empiezan en cero).

Por ejemplo, si ejecutan la

función:

mefaltan([1,3,6,8], ['dorada','plateada','normal','normal','normal','dorada','plateada','normal','normal','normal'], 'plateada')

 

Se debe retornar la lista:

[1,6]

 

3. (Vale 1) La función "notengo" que dada una lista con las skins que tiene otra persona y una lista con las skins que tengo, retornar la lista con las skins que me interesan de la otra persona.

Por ejemplo, si se llama:

notengo([3,5,7,10,15,16],[4,10,5,8])

Se debe retornar la lista:

[3,7,15,16]

 

4. (Vale 1) Para simplificar la primera versión de la librería decidieron pensar que todas las skins son de una misma categoría y que la lista que maneja cada persona indica los números de las skins que tienen para cambiar y aquellos números que no están en dicha lista son los que necesitan. De esta manera deben crear una función "puedocambiar" que reciba la lista de skins que tiene otra persona y la lista de skins que tienen ellos y que retorne la cantidad de skins que pueden cambiar.

Por ejemplo, llamar la función:

puedocambiar([3,5,7,10,15,16],[4,10,5,8])

Debe retornar

2

Porque a la otra persona solo le interesan dos skins que tienen ellos: [4,8], mientras que a ellos les interesan cuatro skins que la otra persona tiene: [3,7,15,16]

Entrada:

Este programa no requiere entrada. Ni generará salida. Se requiere que el estudiante genere un archivo con el nombre laminas.py y que se respeten los nombres de las funciones dadas y sus parámetros.

